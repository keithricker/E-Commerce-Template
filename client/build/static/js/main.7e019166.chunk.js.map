{"version":3,"sources":["redux/user/user.types.js","firebase/firebase.utils.js","redux/user/user.actions.js","redux/cart/cart.types.js","redux/shop/shop.types.js","redux/shop/shop.actions.js","redux/cart/cart.actions.js","redux/user/user.selector.js","App.js","redux/user/user.reducer.js","redux/cart/cart.utils.js","redux/cart/cart.reducer.js","redux/directory/directory.reducer.js","redux/shop/shop.reducer.js","redux/root-reducer.js","redux/shop/shop.sagas.js","redux/user/user.sagas.js","redux/cart/cart.sagas.js","redux/root-saga.js","redux/store.js","index.js"],"names":["UserActionTypes","SET_CURRENT_USER","GOOGLE_SIGN_IN_START","EMAIL_SIGN_IN_START","SIGN_IN_SUCCESS","SIGN_IN_FAILURE","CHECK_USER_SESSION","SIGN_OUT_START","SIGN_OUT_SUCCESS","SIGN_OUT_FAILURE","SIGN_UP_START","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","createUserProfileDocument","userAuth","additionalData","a","userRef","firestore","doc","uid","get","exists","displayName","email","createdAt","Date","set","console","log","message","convertCollectionsSnapshotToMap","collections","docs","map","data","title","items","routeName","encodeURI","toLowerCase","id","reduce","accumulated","collection","getCurrentUser","Promise","resolve","reject","unsubscribe","auth","onAuthStateChanged","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","googleProvider","GoogleAuthProvider","setCustomParameters","prompt","googleSignInStart","type","emailSignInStart","emailAndPassword","payload","signInSuccess","user","signInFailure","error","checkUserSession","signOutStart","signOutSuccess","signOutFailure","signUpStart","userCredentials","signUpSuccess","signUpFailure","CartActionTypes","TOGGLE_CART_HIDDEN","ADD_ITEM","REDUCE_QUANTITY","CLEAR_ITEM_FROM_CART","CLEAR_CART","ShopActionTypes","FETCH_COLLECTIONS_START","FETCH_COLLECTIONS_SUCCESS","FETCH_COLLECTIONS_FAILURE","fetchCollectionsStart","fetchCollectionsSuccess","collectionsMap","fetchCollectionsFailure","errorMessage","toggleCartHidden","addItem","item","reduceItemQuantity","clearItemFromCart","clearCart","selectCurrentUser","createSelector","state","currentUser","HomePage","lazyLoad","SignInAndSignUpPage","CheckoutPage","ContactPage","ShopPage","Header","importFunc","Component","React","lazy","fallback","App","unsubscribeFromAuth","this","props","exact","path","component","render","to","connect","dispatch","INITIAL_STATE","userReducer","action","addItemToCart","cartItems","cartItemToAdd","find","cartItem","quantity","cartItemToReduce","filter","hidden","cartReducer","icons","require","faCloudSunRain","faUserFriends","faPlay","faMarker","sections","imageUrl","icon","linkUrl","faChartLine","size","directoryReducer","isFetching","shopReducer","persistConfig","key","storage","whitelist","rootReducer","combineReducers","cart","directory","shop","persistReducer","fetchCollectionsAsync","shopSagas","collectionRef","snapshot","call","put","takeLatest","all","signUp","signInAfterSignUp","signOut","getSnapshotFromUserAuth","signInWithGoogle","signInWithEmail","isUserAuthenticated","onGoogleSignInStart","onEmailSignInStart","onCheckUserSession","onSignOutStart","onSignUpStart","onSignUpSuccess","userSagas","password","createUserWithEmailAndPassword","userSnapshot","signInWithPopup","signInWithEmailAndPassword","clearCartOnSignOut","onSignOutSuccess","cartSagas","rootSaga","sagaMiddleware","createSagaMiddleware","middlewares","store","createStore","applyMiddleware","run","persistor","persistStore","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.7e019166.chunk.js","sourcesContent":["export const UserActionTypes = {\n    SET_CURRENT_USER: 'SET_CURRENT_USER',\n    GOOGLE_SIGN_IN_START: 'GOOGLE_SIGN_IN_START',\n    EMAIL_SIGN_IN_START: 'EMAIL_SIGN_IN_START',\n    SIGN_IN_SUCCESS: 'SIGN_IN_SUCCESS',\n    SIGN_IN_FAILURE: 'SIGN_IN_FAILURE',\n    CHECK_USER_SESSION: 'CHECK_USER_SESSION',\n    SIGN_OUT_START: 'SIGN_OUT_START',\n    SIGN_OUT_SUCCESS: 'SIGN_OUT_SUCCESS',\n    SIGN_OUT_FAILURE: 'SIGN_OUT_FAILURE',\n    SIGN_UP_START: 'SIGN_UP_START',\n    SIGN_UP_SUCCESS: 'SIGN_UP_SUCCESS',\n    SIGN_UP_FAILURE: 'SIGN_UP_FAILURE'\n}","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nconst config = {\n    apiKey: \"AIzaSyBmkAZLsK9nHRibcKYMA74sQ1uWjKuVMYc\",\n    authDomain: \"crown-db-90fc9.firebaseapp.com\",\n    databaseURL: \"https://crown-db-90fc9.firebaseio.com\",\n    projectId: \"crown-db-90fc9\",\n    storageBucket: \"crown-db-90fc9.appspot.com\",\n    messagingSenderId: \"1053207512331\",\n    appId: \"1:1053207512331:web:a7bc1128af8132eb3dce0e\"\n}\n\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n    if (!userAuth) return;\n\n    const userRef = firestore.doc(`users/${userAuth.uid}`);\n    const snapShot = await userRef.get();\n\n    if (!snapShot.exists) {\n        const { displayName, email } = userAuth;\n        const createdAt = new Date();\n\n        try {\n            await userRef.set({\n                displayName,\n                email,\n                createdAt,\n                ...additionalData\n            })\n        } catch (err) {\n            console.log('error creating user', err.message)\n        }\n    }\n    return userRef;\n}\n\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n    const collectionRef = firestore.collection(collectionKey);\n    const batch = firestore.batch();\n    objectsToAdd.forEach(obj => {\n        const newDocRef = collectionRef.doc();\n        batch.set(newDocRef, obj);\n    });\n    return await batch.commit();\n}\n\nexport const convertCollectionsSnapshotToMap = (collections) => {\n    const transformedCollection = collections.docs.map(doc => {\n        const {title, items} = doc.data();\n        return {\n            routeName: encodeURI(title.toLowerCase()),\n            id: doc.id,\n            title,\n            items\n        }\n    });\n    return transformedCollection.reduce((accumulated, collection) => {\n        accumulated[collection.title.toLowerCase()] = collection;\n        return accumulated;\n    }, {});\n}\n\nexport const getCurrentUser = () => {\n    return new Promise((resolve, reject) => {\n        const unsubscribe = auth.onAuthStateChanged(userAuth => {\n            unsubscribe();\n            resolve(userAuth);\n        }, reject)\n    })\n}\n\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\ngoogleProvider.setCustomParameters({ prompt: 'select_account' });\nexport const signInWithGoogle = () => auth.signInWithPopup(googleProvider);","import { UserActionTypes } from './user.types';\n\nexport const googleSignInStart = () => ({\n    type: UserActionTypes.GOOGLE_SIGN_IN_START\n});\n\nexport const emailSignInStart = (emailAndPassword) => ({\n    type: UserActionTypes.EMAIL_SIGN_IN_START,\n    payload: emailAndPassword\n});\n\nexport const signInSuccess = user => ({\n    type: UserActionTypes.SIGN_IN_SUCCESS,\n    payload: user\n});\n\nexport const signInFailure = error => ({\n    type: UserActionTypes.SIGN_IN_FAILURE,\n    payload: error\n});\n\nexport const checkUserSession = () => ({\n    type: UserActionTypes.CHECK_USER_SESSION\n});\n\nexport const signOutStart = () => ({\n    type: UserActionTypes.SIGN_OUT_START\n});\n\nexport const signOutSuccess = () => ({\n    type: UserActionTypes.SIGN_OUT_SUCCESS\n});\n\nexport const signOutFailure = (error) => ({\n    type: UserActionTypes.SIGN_OUT_FAILURE,\n    payload: error\n});\n\nexport const signUpStart = (userCredentials) => ({\n    type: UserActionTypes.SIGN_UP_START,\n    payload: userCredentials\n});\n\nexport const signUpSuccess = ({user, additionalData}) => ({\n    type: UserActionTypes.SIGN_UP_SUCCESS,\n    payload: { user, additionalData }\n});\n\nexport const signUpFailure = error => ({\n    type: UserActionTypes.SIGN_UP_FAILURE,\n    payload: error\n})","export const CartActionTypes = {\n    TOGGLE_CART_HIDDEN: 'TOGGLE_CART_HIDDEN',\n    ADD_ITEM: 'ADD_ITEM',\n    REDUCE_QUANTITY: 'REDUCE_QUANTITY',\n    CLEAR_ITEM_FROM_CART: 'CLEAR_ITEM_FROM_CART',\n    CLEAR_CART: 'CLEAR_CART'\n}\n","const ShopActionTypes = {\n    FETCH_COLLECTIONS_START: 'FETCH_COLLECTIONS_START',\n    FETCH_COLLECTIONS_SUCCESS: 'FETCH_COLLECTIONS_SUCCESS',\n    FETCH_COLLECTIONS_FAILURE: 'FETCH_COLLECTIONS_FAILURE'\n}\nexport default ShopActionTypes;","import ShopActionTypes from './shop.types';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\n\nexport const fetchCollectionsStart = () => ({\n    type: ShopActionTypes.FETCH_COLLECTIONS_START\n});\n\nexport const fetchCollectionsSuccess = collectionsMap => ({\n    type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n    payload: collectionsMap\n});\n\nexport const fetchCollectionsFailure = errorMessage => ({\n    type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n    payload: errorMessage\n});\n\nexport const fetchCollectionsStartAsync = () => {\n    return dispatch => {\n        const collectionRef = firestore.collection('collections');\n        dispatch(fetchCollectionsStart());\n\n        collectionRef.get().then(snapshot => {\n            const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n            dispatch(fetchCollectionsSuccess(collectionsMap));\n        }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n    }\n}","import { CartActionTypes } from './cart.types';\n\nexport const toggleCartHidden = () => ({\n    type: CartActionTypes.TOGGLE_CART_HIDDEN\n});\n\nexport const addItem = item => ({\n    type: CartActionTypes.ADD_ITEM,\n    payload: item\n});\n\nexport const reduceItemQuantity = item => ({\n    type: CartActionTypes.REDUCE_QUANTITY,\n    payload: item\n})\n\nexport const clearItemFromCart = item => ({\n    type: CartActionTypes.CLEAR_ITEM_FROM_CART,\n    payload: item\n});\n\nexport const clearCart = () => ({\n    type: CartActionTypes.CLEAR_CART\n})","import { createSelector } from 'reselect';\n\nconst selectUser = state => state.user;\n\nexport const selectCurrentUser = createSelector(\n    [selectUser],\n    (user) => user.currentUser\n);","import React, {Suspense} from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport './App.css';\nimport { selectCurrentUser } from './redux/user/user.selector';\nimport { checkUserSession } from './redux/user/user.actions'\n\nconst HomePage = lazyLoad(() => import('./pages/homepage/homepage.component'))\nconst SignInAndSignUpPage = lazyLoad(() => import('./pages/sign-in-and-sign-up/sign-in-and-sign-up.component'));\nconst CheckoutPage = lazyLoad(() => import('./pages/checkout/checkout.component'));\nconst ContactPage = lazyLoad(() => import('./pages/contact/contact.component'));\nconst ShopPage = lazyLoad(() => import('./pages/shop/shop.component'));\nconst Header = lazyLoad(() => import('./components/header/header.component'));\n\nfunction lazyLoad(importFunc) {\n  const Component = React.lazy(importFunc)\n  return () => <Suspense fallback={<div>Loading ...</div>}><Component /></Suspense>\n}\n\nclass App extends React.Component {\n  unsubscribeFromAuth = null;\n  \n  componentDidMount() {\n    const { checkUserSession } = this.props;\n    checkUserSession();\n  }\n\n  componentWillUnmount() {\n    console.log(\"component unmounting\");\n    this.unsubscribeFromAuth();\n  }\n\n  render() {\n    return (\n      <div>\n        <Header />\n        <Switch>\n          <Route exact path='/' component={HomePage} />\n          <Route path='/shop' component={ShopPage} />\n          <Route exact path='/contact' component={() => <ContactPage />} />\n          <Route exact path='/checkout' component={CheckoutPage} />\n          <Route exact path='/signin' render={\n            () => this.props.currentUser ? (\n                <Redirect to='/' />\n              ) : (\n                <SignInAndSignUpPage />\n              )\n          } />\n        </Switch>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n  currentUser: selectCurrentUser(state)\n})\n\nconst mapDispatchToProps = dispatch => ({\n  checkUserSession: () => dispatch(checkUserSession())\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { UserActionTypes } from './user.types';\n\nconst INITIAL_STATE = {\n    currentUser: null\n}\nconst userReducer = (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case UserActionTypes.SIGN_IN_SUCCESS:\n            return {\n                ...state,\n                currentUser: action.payload,\n                error: null\n            }\n        case UserActionTypes.SIGN_OUT_SUCCESS:\n            return {\n                ...state,\n                currentUser: null,\n                error: null               \n            }\n        case UserActionTypes.SIGN_IN_FAILURE:\n        case UserActionTypes.SIGN_OUT_FAILURE:\n        case UserActionTypes.SIGN_UP_FAILURE:\n            return {\n                ...state,\n                error: action.payload\n            }\n        default:\n            return state;\n    }\n}\nexport default userReducer;","export const addItemToCart = (cartItems, cartItemToAdd) => {\n   const existingCartItem = cartItems.find(cartItem => cartItem.id === cartItemToAdd.id);\n\n   if (existingCartItem) {\n      return cartItems.map(\n         cartItem => {\n            return cartItem.id === cartItemToAdd.id ? {\n               ...cartItem, quantity: cartItem.quantity +1\n            } : cartItem\n         }\n       );\n    }\n    return [ ...cartItems, { ...cartItemToAdd, quantity: 1 }]\n};\n\nexport const reduceItemQuantity = (cartItems, cartItemToReduce) => {\n   const existingCartItem = cartItems.find(cartItem => cartItem.id === cartItemToReduce.id);\n   if (existingCartItem.quantity === 1) {\n      return cartItems.filter(item => item.id !== cartItemToReduce.id);\n   }\n   return cartItems.map(item =>\n      item.id === cartItemToReduce.id \n      ? { ...item, quantity: item.quantity -1 }\n      : item\n    );\n}","import { CartActionTypes } from './cart.types';\nimport { addItemToCart, reduceItemQuantity } from './cart.utils';\n\nconst INITIAL_STATE = {\n    hidden: true,\n    cartItems: []\n}\nconst cartReducer = (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case CartActionTypes.TOGGLE_CART_HIDDEN :\n            return {\n                ...state,\n                hidden: !state.hidden\n            }\n        case CartActionTypes.ADD_ITEM :\n            return {\n                ...state,\n                cartItems: addItemToCart(state.cartItems, action.payload)\n            }\n        case CartActionTypes.REDUCE_QUANTITY :\n            return {\n                ...state,\n                cartItems: reduceItemQuantity(state.cartItems, action.payload)\n            }\n        case CartActionTypes.CLEAR_ITEM_FROM_CART :\n            return {\n                ...state,\n                cartItems: state.cartItems.filter(item => item.id !== action.payload.id)\n            }\n        case CartActionTypes.CLEAR_CART :\n            return {\n                ...state,\n                cartItems: []\n            }\n        default:\n            return state;\n    }\n}\nexport default cartReducer;","const icons = require('@fortawesome/free-solid-svg-icons')\nconst { faCloudSunRain, faUserFriends, faPlay, faMarker, faChartLine } = icons;\nconst INITIAL_STATE = {\n    sections: [\n        {\n          title: 'weather',\n          imageUrl: '/img/weatherwidget.webp',\n          icon: faCloudSunRain,\n          id: 1,\n          linkUrl: 'shop/weather'\n        },\n        {\n          title: 'social',\n          imageUrl: '/img/kidshugging.webp',\n          icon: faUserFriends,\n          id: 2,\n          linkUrl: 'shop/social'\n        },\n        {\n          title: 'music',\n          imageUrl: '/img/musicwidget.webp',\n          icon: faPlay,\n          id: 3,\n          linkUrl: 'shop/music'\n        },\n        {\n          title: 'finance',\n          imageUrl: '/img/stockwidget.webp',\n          icon: faChartLine,\n          id: 4,\n          linkUrl: 'shop/finance',\n          size: 'large'\n        },\n        {\n          title: 'productivity',\n          imageUrl: '/img/pic.webp',\n          icon: faMarker,\n          id: 5,\n          linkUrl: 'shop/productivity',\n          size: 'large'\n        }               \n  ]    \n}\nconst directoryReducer = (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        default:\n            return state;\n    }\n}\nexport default directoryReducer;","import ShopActionTypes from './shop.types';\n\nconst INITIAL_STATE = {\n    collections: null,\n    isFetching: false\n}\nconst shopReducer = (state = INITIAL_STATE, action) => {\n    switch (action.type) {\n        case ShopActionTypes.FETCH_COLLECTIONS_START:\n            return {\n                ...state,\n                isFetching: true\n            }\n        case ShopActionTypes.FETCH_COLLECTIONS_SUCCESS:\n            return {\n                ...state,\n                isFetching: false,\n                collections: action.payload\n            }\n        case ShopActionTypes.FETCH_COLLECTIONS_FAILURE:\n            return {\n                ...state,\n                isFetching: false,\n                errorMessage: action.payload\n            }\n        default:\n            return state;\n    }\n}\nexport default shopReducer;","import { combineReducers } from \"redux\";\nimport { persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport userReducer from './user/user.reducer';\nimport cartReducer from './cart/cart.reducer';\nimport directoryReducer from './directory/directory.reducer';\nimport shopReducer from './shop/shop.reducer';\n\nconst persistConfig = {\n    key: 'root',\n    storage,\n    whitelist: ['cart']\n}\n\nconst rootReducer = combineReducers({\n    user: userReducer,\n    cart: cartReducer,\n    directory: directoryReducer,\n    shop: shopReducer\n});\nexport default persistReducer(persistConfig, rootReducer);","import { takeLatest, call, put, all } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\nimport ShopActionTypes from './shop.types';\n\nexport function* fetchCollectionsAsync() {\n    yield console.log(\"fetchCollectionsAsync was fired\");\n\n    try {\n        const collectionRef = firestore.collection('collections');\n        const snapshot = yield collectionRef.get();\n        const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n        yield put(fetchCollectionsSuccess(collectionsMap))\n    } catch (error) {\n        yield put (fetchCollectionsFailure(error.message))\n    }\n}\n\nexport function* fetchCollectionsStart() {\n    yield takeLatest(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n}\n\nexport function* shopSagas() {\n    yield all([\n        call(fetchCollectionsStart)\n    ]);\n}","import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport { UserActionTypes } from './user.types';\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\nimport { signInSuccess, signInFailure, signOutSuccess, signOutFailure, signUpSuccess, signUpFailure } from './user.actions';\n\nexport function* signUp({payload: {email, password, displayName}}) {\n    try {\n        const { user } = yield auth.createUserWithEmailAndPassword(email, password);\n        yield createUserProfileDocument(user, { displayName })\n        yield put(signUpSuccess({ user, additionalData: { displayName } }));\n    } catch(error) {\n        yield put(signUpFailure(error));\n    }\n}\n\nexport function* signInAfterSignUp({payload: {user, additionalData}}) {\n    yield getSnapshotFromUserAuth(user, additionalData);\n}\n\nexport function* signOut() {\n    try {\n        yield auth.signOut();\n        yield put(signOutSuccess())\n    } catch(error) {\n        yield put(signOutFailure(error));\n    }\n}\n\nexport function* getSnapshotFromUserAuth(userAuth, additionalData) {\n    try {\n        const userRef = yield call(createUserProfileDocument, userAuth, additionalData);\n        const userSnapshot = yield userRef.get();\n        yield put(signInSuccess({id: userSnapshot.id, ...userSnapshot.data()}));\n    } catch(error) {\n        yield put(signInFailure(error));\n    }\n}\n\nexport function* signInWithGoogle() {\n    try {\n        const {user} = yield auth.signInWithPopup(googleProvider);\n        yield getSnapshotFromUserAuth(user);\n    } catch(error) {\n        yield put(signInFailure(error));\n    }\n}\n\nexport function* signInWithEmail({payload: {email,password}}) {\n    try {\n        const { user } = yield auth.signInWithEmailAndPassword(email,password);\n        yield getSnapshotFromUserAuth(user);\n    } catch(error) {\n        yield put(signInFailure(error))\n    }\n}\n\nexport function* isUserAuthenticated() {\n    try {\n        const userAuth = yield getCurrentUser();\n        if (!userAuth) return;\n        yield getSnapshotFromUserAuth(userAuth);\n    } catch(error) {\n        yield put(signInFailure(error));\n    }\n}\n\nexport function* onGoogleSignInStart() {\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\n\nexport function* onEmailSignInStart() {\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\n\nexport function* onCheckUserSession() {\n    yield takeLatest(UserActionTypes.CHECK_USER_SESSION, isUserAuthenticated)\n}\n\nexport function* onSignOutStart() {\n    yield takeLatest(UserActionTypes.SIGN_OUT_START,signOut)\n}\n\nexport function* onSignUpStart() {\n    yield takeLatest(UserActionTypes.SIGN_UP_START,signUp)\n}\n\nexport function* onSignUpSuccess() {\n    yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, signInAfterSignUp)\n}\n\nexport function* userSagas() {\n    yield all([\n        call(onGoogleSignInStart),\n        call(onEmailSignInStart),\n        call(onCheckUserSession),\n        call(onSignOutStart),\n        call(onSignUpStart),\n        call(onSignUpSuccess)\n    ]);\n}","import { takeLatest, call, all, put } from 'redux-saga/effects';\nimport { clearCart } from './cart.actions';\nimport { UserActionTypes } from '../user/user.types';\n\nexport function* clearCartOnSignOut() {\n    yield put(clearCart());\n}\n\nexport function* onSignOutSuccess() {\n    yield takeLatest(UserActionTypes.SIGN_OUT_SUCCESS, clearCartOnSignOut);\n}\n\nexport function* cartSagas() {\n    yield all([\n        call(onSignOutSuccess)\n    ]);\n}","import { all, call } from 'redux-saga/effects';\nimport { shopSagas } from './shop/shop.sagas';\nimport { userSagas } from './user/user.sagas';\nimport { cartSagas } from '../redux/cart/cart.sagas';\n\nexport default function* rootSaga() {\n    yield all([\n        call(shopSagas),\n        call(userSagas),\n        call(cartSagas)\n    ]);\n}","import { createStore, applyMiddleware } from 'redux';\nimport { persistStore } from 'redux-persist';\nimport logger from 'redux-logger';\nimport rootReducer from './root-reducer';\nimport rootSaga from './root-saga';\nimport createSagaMiddleware from 'redux-saga';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [sagaMiddleware];\nif (process.env.NODE_ENV === 'development') {\n    middlewares.push(logger);\n}\nexport const store = createStore(rootReducer, applyMiddleware( ...middlewares));\nsagaMiddleware.run(rootSaga);\nexport const persistor = persistStore(store);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react'\nimport './index.css';\nimport App from './App';\nimport { store, persistor } from './redux/store';\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter>\n            <PersistGate persistor={persistor}>\n                <App />\n            </PersistGate>\n        </BrowserRouter>\n    </Provider>,\n    document.getElementById('root')\n);\n\n/*\nconst Page1 = ({match}) => {\n    console.log(match);\n    return (\n    <h1>Page 1</h1>\n    )\n};\nconst Page2 = ({match}) => { \n    console.log(match);\n    return (\n    <h1>Page 2</h1>\n    )\n};\nconst Page3 = (match) => {\n    console.log(match);\n    return (\n    <h1>Page 3</h1>\n    )\n};\nconst Item = () => {\n    return (\n        <h1>Item</h1>\n    )\n}\n\nReactDOM.render(\n    <BrowserRouter>\n        <Switch>\n            <Route exact path=\"/\" component={Page1} />\n            <Route exact path=\"/page2\" component={Page2} />\n            <Route path=\"/page2/:hello\" component={Page2} />\n            <Route path=\"/page3\" component={Page3} />\n        </Switch>\n    </BrowserRouter>,\n    document.getElementById('root')\n);\n*/"],"sourceRoot":""}