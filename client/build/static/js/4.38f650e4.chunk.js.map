{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/form-input/form-input.component.jsx","components/sign-in/sign-in.component.jsx","components/sign-up/sign-up.component.jsx","pages/sign-in-and-sign-up/sign-in-and-sign-up.component.jsx"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","FormInput","handleChange","label","otherProps","className","onChange","connect","dispatch","googleSignInStart","emailSignInStart","email","password","useState","userCredentials","setCredentials","handleSubmit","event","a","preventDefault","target","name","onSubmit","type","required","onClick","signUpStart","displayName","confirmPassword","setUserCredentials","alert","SignInAndSignUpPage"],"mappings":"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","file":"static/js/4.38f650e4.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React from \"react\";\nimport './form-input.styles.scss';\n\nconst FormInput = ({ handleChange, label, ...otherProps }) => (\n    <div className=\"group\">\n        <input className=\"form-input\" onChange={handleChange} { ...otherProps } />\n        {label ? (\n            <label className={`${otherProps.value.length ? 'shrink' : ''} form-input-label`}>{label}</label>\n        ) : null}\n    </div>\n)\nexport default FormInput;\n","import React, { useState } from 'react';\nimport './sign-in.styles.scss';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component'\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\nimport { connect } from 'react-redux'\n\nconst SignIn = ({googleSignInStart, emailSignInStart}) => {\n\n    const [userCredentials, setCredentials] = useState({email: '', password: ''});\n    const { email, password } = userCredentials;\n\n    const handleSubmit = async event => {\n        event.preventDefault();\n        emailSignInStart(email, password);\n    }\n\n    const handleChange = event => {\n        const { value, name } = event.target;\n        setCredentials({ ...userCredentials, [name]: value });\n    }\n\n    return (\n        <div className=\"sign-in\">\n            <h3>I already have an account</h3>\n            <span>Sign in with your email and password</span>\n            <form onSubmit={handleSubmit}>\n                <FormInput name=\"email\" type=\"email\" handleChange={handleChange} value={email} label=\"email\" required />\n                <FormInput \n                    name=\"password\" \n                    type=\"password\" \n                    value={password}\n                    handleChange={handleChange}\n                    label=\"password\"\n                    required \n                />\n                <div className=\"buttons\">\n                    <CustomButton type=\"submit\">Sign In</CustomButton>\n                    <CustomButton type=\"button\" onClick={googleSignInStart} className=\"google-sign-in\"> Sign In With Google </CustomButton>\n                </div>\n            </form>\n        </div>\n    )\n}\nconst mapDispatchToProps = dispatch => ({\n    googleSignInStart: () => dispatch(googleSignInStart()),\n    emailSignInStart: (email, password) => dispatch(emailSignInStart({email,password}))\n})\nexport default connect(null, mapDispatchToProps)(SignIn);\n","import React, {useState} from 'react';\nimport {connect} from 'react-redux';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button.component';\nimport { signUpStart } from '../../redux/user/user.actions';\nimport './sign-up.styles.scss';\n\nconst SignUp = ({ signUpStart }) => {\n\n    const [userCredentials, setUserCredentials] = useState({\n        displayName: '',\n        email: '',\n        password: '',\n        confirmPassword: ''\n    });\n\n    const { displayName, email, password, confirmPassword } = userCredentials;\n    const handleSubmit = async event => {\n        event.preventDefault();\n        if (password !== confirmPassword) {\n            alert(\"passwords do not match\");\n            return;\n        }\n        signUpStart({ displayName, email, password });\n    }\n    const handleChange = event => {\n        const { name, value } = event.target;\n        setUserCredentials({...userCredentials,[name]: value});\n    }\n    return (\n        <div className='sign-up'>\n            <h3 className=\"title\">I do not have an account</h3> \n            <span>Sign up with your email and password</span> \n            <form className=\"sign-up-form\" onSubmit={handleSubmit}>\n                <FormInput \n                type=\"text\"\n                name=\"displayName\"\n                value={displayName}\n                onChange={handleChange}\n                label='Display Name'\n                required\n                />\n                <FormInput \n                type=\"email\"\n                name=\"email\"\n                value={email}\n                onChange={handleChange}\n                label='Email'\n                required\n                />\n                <FormInput \n                type=\"password\"\n                name=\"password\"\n                value={password}\n                onChange={handleChange}\n                label='Password'\n                required\n                />\n                <FormInput \n                type=\"password\"\n                name=\"confirmPassword\"\n                value={confirmPassword}\n                onChange={handleChange}\n                label='Confirm Password'\n                required\n                />\n                <CustomButton type=\"submit\">Sign Up</CustomButton>\n            </form>\n        </div>\n    );\n}\nconst mapDispatchToProps = dispatch => ({\n    signUpStart: (userCredentials) => dispatch(signUpStart(userCredentials))\n})\nexport default connect(null,mapDispatchToProps)(SignUp);","import React from 'react';\nimport './sign-in-and-sign-up.styles.scss';\nimport SignIn from '../../components/sign-in/sign-in.component';\nimport SignUp from '../../components/sign-up/sign-up.component';\n\nconst SignInAndSignUpPage = () => (\n    <div className=\"sign-in-and-sign-up\">\n        <SignIn />\n        <SignUp />\n    </div>\n);\nexport default SignInAndSignUpPage;\n"],"sourceRoot":""}