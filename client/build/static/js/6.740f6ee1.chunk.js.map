{"version":3,"sources":["components/checkout-item/checkout-item.component.jsx","components/stripe-button/stripe-button.component.jsx","pages/checkout/checkout.component.jsx"],"names":["connect","dispatch","clearItem","item","clearItemFromCart","reduceItemQuantity","addItem","_ref","cartItem","name","imageUrl","price","quantity","_jsxs","className","children","_jsx","src","alt","onClick","ev","parent","target","parentNode","Object","assign","style","transition","height","opacity","padding","window","setTimeout","removeItemFromDom","StripeCheckoutButton","priceForStripe","StripeCheckout","label","billingAddress","shippingAddress","image","description","concat","amount","panelLabel","token","console","log","axios","url","method","data","then","response","alert","catch","error","JSON","parse","stripeKey","state","cartItems","selectCartItems","total","selectCartItemsTotal","map","CheckoutItem","id","class"],"mappings":"sMAyCeA,cAAQ,MALI,SAAAC,GAAQ,MAAK,CACpCC,UAAW,SAAAC,GAAI,OAAIF,EAASG,YAAkBD,GAAM,EACpDE,mBAAoB,SAAAF,GAAI,OAAIF,EAASI,YAAmBF,GAAM,EAC9DG,QAAS,SAAAH,GAAI,OAAIF,EAASK,YAAQH,GAAM,EAC3C,GACcH,EApCM,SAAHO,GAA8D,IAAxDC,EAAQD,EAARC,SAAUN,EAASK,EAATL,UAAWI,EAAOC,EAAPD,QAASD,EAAkBE,EAAlBF,mBAc1CI,EAAoCD,EAApCC,KAAMC,EAA8BF,EAA9BE,SAAUC,EAAoBH,EAApBG,MAAOC,EAAaJ,EAAbI,SAC/B,OACAC,eAAA,OAAKC,UAAU,gBAAeC,SAAA,CAC1BC,cAAA,OAAKF,UAAU,kCAAiCC,SAC5CC,cAAA,OAAKC,IAAKP,EAAUQ,IAAI,WAE5BF,cAAA,QAAMF,UAAU,uBAAsBC,SAAEN,IACxCI,eAAA,QAAMC,UAAU,2BAA0BC,SAAA,CACtCC,cAAA,QAAMF,UAAU,QAAQK,QAAS,kBAAMd,EAAmBG,EAAS,EAACO,SAAC,WACjEC,cAAA,QAAMF,UAAU,QAAOC,SAAEH,IAC7BI,cAAA,QAAMF,UAAU,QAAQK,QAAS,SAACC,GAAE,OAAKd,EAAQE,EAAS,EAACO,SAAC,cAEhEF,eAAA,QAAMC,UAAU,wBAAuBC,SAAA,CAAC,IAAEJ,KAC1CK,cAAA,OAAKF,UAAU,gCAAgCK,QAAS,SAACC,GAAE,OA1BrC,SAACA,EAAGjB,GAC1B,IAAMkB,EAASD,EAAGE,OAAOC,WACzBC,OAAOC,OAAOJ,EAAOK,MAAM,CACvBC,WAAY,WACZ,aAAc,MACdC,OAAQ,MACRC,QAAS,IACTC,QAAS,QAEbC,OAAOC,YAAW,WACd9B,EAAUC,EACd,GAAE,IACN,CAcoE8B,CAAkBb,EAAGZ,EAAS,EAACO,SAAC,aAGxG,I,oCCOemB,EAtCc,SAAH3B,GAAmB,IAAbI,EAAKJ,EAALI,MACxBwB,EAAyB,IAARxB,EAsBvB,OACEK,cAACoB,IAAc,CACfC,MAAM,UACN5B,KAAK,0BACL6B,gBAAc,EACdC,iBAAe,EACfC,MAAM,iCACNC,YAAW,kBAAAC,OAAoB/B,GAC/BgC,OAAQR,EACRS,WAAW,UACXC,MA7Bc,SAAAA,GACZC,QAAQC,IAAIF,GACZG,IAAM,CACJC,IAAK,UACLC,OAAQ,OACRC,KAAM,CACJR,OAAQR,EACRU,WAGHO,MAAK,SAAAC,GACJC,MAAM,qBACR,IACCC,OAAM,SAAAC,GACLV,QAAQC,IAAI,kBAAmBU,KAAKC,MAAMF,IAC1CF,MAAM,iGACR,GACJ,EAaEK,UAhCqB,8CAmCzB,E,OCXe3D,uBAJS,SAAA4D,GAAK,MAAK,CAChCC,UAAYC,YAAgBF,GAC5BG,MAAQC,YAAqBJ,GAC9B,GACc5D,EApBM,SAAHO,GAAA,IAAKsD,EAAStD,EAATsD,UAAWE,EAAKxD,EAALwD,MAAK,OACrClD,eAAA,OAAKC,UAAU,gBAAeC,SAAA,CAExB8C,EAAUI,KAAI,SAAA9D,GAAI,OAAIa,cAACkD,EAAY,CAAe1D,SAAUL,GAAnBA,EAAKgE,GAAsB,IAEtEtD,eAAA,OAAKC,UAAU,QAAOC,SAAA,CACpBC,cAAA,QAAMoD,MAAM,aAAYrD,SAAC,eAAmBF,eAAA,QAAMuD,MAAM,eAAcrD,SAAA,CAAC,IAAEgD,QAE3ElD,eAAA,OAAKC,UAAU,eAAcC,SAAA,CAAC,2DAE5BC,cAAA,SAAM,iDAGRA,cAACkB,EAAoB,CAACvB,MAAOoD,MAC3B,G","file":"static/js/6.740f6ee1.chunk.js","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport './checkout-item.styles.scss';\nimport { clearItemFromCart, addItem, reduceItemQuantity } from '../../redux/cart/cart.actions'\n\nconst CheckoutItem = ({ cartItem, clearItem, addItem, reduceItemQuantity }) => {\n    const removeItemFromDom = (ev,item) => {\n        const parent = ev.target.parentNode\n        Object.assign(parent.style,{\n            transition: \"all 0.5s\",\n            'min-height': \"0px\",\n            height: \"0px\",\n            opacity: \"0\",\n            padding: \"0px\"\n        })\n        window.setTimeout(() => {\n            clearItem(item)\n        },500)\n    }\n    const { name, imageUrl, price, quantity } = cartItem\n    return (\n    <div className='checkout-item'>\n        <div className='checkout-column image-container'>\n            <img src={imageUrl} alt=\"item\" />\n        </div>\n        <span className=\"checkout-column name\">{name}</span>\n        <span className=\"checkout-column quantity\">\n            <span className=\"arrow\" onClick={() => reduceItemQuantity(cartItem)}>&#10094;</span>\n                <span className=\"value\">{quantity}</span>\n            <span className=\"arrow\" onClick={(ev) => addItem(cartItem)}>&#10095;</span>\n        </span>\n        <span className=\"checkout-column price\">${price}</span>\n        <div className=\"checkout-column remove-button\" onClick={(ev) => removeItemFromDom(ev,cartItem)}>&#10005;</div>\n    </div>\n    )\n}\nconst mapDispatchToProps = dispatch => ({\n    clearItem: item => dispatch(clearItemFromCart(item)),\n    reduceItemQuantity: item => dispatch(reduceItemQuantity(item)),\n    addItem: item => dispatch(addItem(item))\n})\nexport default connect(null, mapDispatchToProps)(CheckoutItem);","import React from 'react';\nimport StripeCheckout from 'react-stripe-checkout';\nimport axios from 'axios';\n\nconst StripeCheckoutButton = ({ price }) => {\n  const priceForStripe = price * 100;\n  const publishableKey = 'pk_test_xYtLS9QFqAO646nlSGWbkVK600VgjaWS2v';\n\n  const onToken = token => {\n      console.log(token);\n      axios({\n        url: 'payment',\n        method: 'post',\n        data: {\n          amount: priceForStripe,\n          token\n        }\n      })\n      .then(response => {\n        alert('Payment Successful')\n      })\n      .catch(error => {\n        console.log('Payment Error: ', JSON.parse(error));\n        alert('There was an error with your transaction. Please be sure to use the provided test credit card.')\n      });\n  }\n\n  return (\n    <StripeCheckout\n    label=\"Pay Now\"\n    name='Widgets Unlimited, Inc.'\n    billingAddress\n    shippingAddress\n    image='https://svgshare.com/i/CUz.svg'\n    description={`Your total is $${price}`}\n    amount={priceForStripe}\n    panelLabel='Pay Now'\n    token={onToken}\n    stripeKey={publishableKey}\n    />\n  );\n};\nexport default StripeCheckoutButton;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport { selectCartItems, selectCartItemsTotal } from '../../redux/cart/cart.selectors';\nimport CheckoutItem from '../../components/checkout-item/checkout-item.component';\nimport StripeCheckoutButton from '../../components/stripe-button/stripe-button.component'\n\nimport './checkout.styles.scss';\n\n\nconst CheckoutPage = ({cartItems, total}) => (\n  <div className=\"checkout-page\">\n      {\n        cartItems.map(item => <CheckoutItem key={item.id} cartItem={item} />)\n      }\n      <div className=\"total\">\n        <span class=\"total-text\">TOTAL:&nbsp;</span><span class=\"total-amount\">${total}</span>\n      </div>\n      <div className='test-warning'>\n        *Please use the following test credit card for payments*\n        <br />\n        4242 4242 4242 4242 - Exp: 01/20 - CVV: 123\n      </div>\n      <StripeCheckoutButton price={total} />\n  </div>\n)\nconst mapStateToProps = state => ({\n  cartItems : selectCartItems(state),\n  total : selectCartItemsTotal(state)\n});\nexport default connect(mapStateToProps)(CheckoutPage);"],"sourceRoot":""}